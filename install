#!/bin/bash
#
cur_dir=`pwd`
# If files already present (quite probable), move them so we can link new ones
if [ -f $HOME/.vimrc ]
then
    mv $HOME/.vimrc $HOME/.vimrc.vanilla
fi
if [ -f $HOME/.bashrc ]
then
    mv $HOME/.bashrc $HOME/.bashrc.vanilla
fi
if [ -f $HOME/.gitconfig ]
then
    mv $HOME/.gitconfig $HOME/.gitconfig.vanilla
fi
if [ -L $HOME/.vim/autoload ]
then
    rm $HOME/.vim/autoload
fi
if [ -d $HOME/.vim/autoload ]
then
    mv $HOME/.vim/autoload $HOME/.vim/autoload.bak
fi
if [ -L $HOME/.vim/bundle ]
then
    rm $HOME/.vim/bundle
fi
if [ -d $HOME/.vim/bundle ]
then
    mv $HOME/.vim/bundle $HOME/.vim/bundle.bak
fi

# Check if were also install config for awesome wm
if [[ "$*" == "awesome" ]]
then
    install_awesome="Y"
    awesome_path=$HOME/".config/awesome"
    if [ -f $awesome_path/rc.lua ]
    then
        mv $awesome_path/rc.lua $awesome_path/rc.lua.vanilla
    else
        mkdir -p $awesome_path
    fi 
fi 

# Now we're sure the path is clear of naming conflicts
# we can safely link everything  
ln bashrc $HOME/.bashrc
ln vimrc $HOME/.vimrc
ln gitconfig $HOME/.gitconfig
ln -s $cur_dir/vim/autoload $HOME/.vim/autoload
ln -s $cur_dir/vim/bundle $HOME/.vim/bundle

if [ "$install_awesome" = "Y" ]
then
    ln rc.lua $awesome_path/rc.lua
fi
# my vimrc requires 2 non-standard dirs
mkdir -p $HOME/.vim/backup
mkdir -p $HOME/.vim/tmp

git submodule init
